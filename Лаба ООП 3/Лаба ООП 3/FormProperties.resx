<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HwA=
</value>
  </data>
</root>